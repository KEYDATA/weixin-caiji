IncomingMessage {
  _readableState:
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: [],
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     defaultEncoding: 'utf8',
     ranOut: false,
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null,
     resumeScheduled: false },
  readable: false,
  domain: null,
  _events: { data: [Function], end: [Function] },
  _eventsCount: 2,
  _maxListeners: undefined,
  socket:
   TLSSocket {
     _tlsOptions:
      { secureContext: [Object],
        isServer: true,
        server: [Object],
        requestCert: false,
        rejectUnauthorized: false,
        handshakeTimeout: 120000,
        NPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        SNICallback: [Function: SNIPrepareCert] },
     _secureEstablished: true,
     _securePending: false,
     _newSessionPending: false,
     _controlReleased: true,
     _SNICallback: [Function: SNIPrepareCert],
     servername: 'mp.weixin.qq.com',
     npnProtocol: false,
     alpnProtocol: 'http/1.1',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _events:
      { close: [Object],
        end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        secure: [Function],
        _tlsError: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 12,
     _connecting: false,
     _hadError: false,
     _handle:
      TLSWrap {
        _externalStream: {},
        fd: 26,
        _parent: [Object],
        _parentWrap: [Object],
        _secureContext: [Object],
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        writeQueueSize: 1,
        onhandshakestart: [Function: bound onhandshakestart],
        onhandshakedone: [Function: bound onhandshakedone],
        onclienthello: [Function: bound onclienthello],
        oncertcb: [Function: bound oncertcb],
        onnewsession: [Function: bound onnewsession],
        lastHandshakeTime: 10668,
        handshakes: 0,
        onerror: [Function],
        sni_context: SecureContext {} },
     _parent:
      Socket {
        _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null },
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 0,
     _bytesDispatched: 622,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     ssl:
      TLSWrap {
        _externalStream: {},
        fd: 26,
        _parent: [Object],
        _parentWrap: [Object],
        _secureContext: [Object],
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        writeQueueSize: 1,
        onhandshakestart: [Function: bound onhandshakestart],
        onhandshakedone: [Function: bound onhandshakedone],
        onclienthello: [Function: bound onclienthello],
        oncertcb: [Function: bound oncertcb],
        onnewsession: [Function: bound onnewsession],
        lastHandshakeTime: 10668,
        handshakes: 0,
        onerror: [Function],
        sni_context: SecureContext {} },
     server:
      Server {
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: false,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0d 0a 4d 49 49 43 58 51 49 42 41 41 4b 42 67 51 44 43 44 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0d 0a 4d 49 49 43 55 7a 43 43 41 62 79 67 41 77 49 42 41 67 49 51 6a ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        sessionIdContext: 'd2faffed9d74b8e7db7005e44b7a49bb',
        _sharedCreds: [Object],
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '6::::40000' },
     _requestCert: false,
     _rejectUnauthorized: false,
     _idleTimeout: 120000,
     _idleNext:
      { [Function: utcDate]
        _onTimeout: [Function],
        _idleTimeout: 762,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 10875 },
     _idlePrev:
      Socket {
        _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        bytesRead: 3488,
        _bytesDispatched: 1649,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Circular],
        _idlePrev: [Object],
        _idleStart: 11229,
        parser: null,
        on: [Function],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idleStart: 10876,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage:
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: true,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: 'HTTP/1.1 200 OK\r\ncontent-type: text/html; charset=UTF-8\r\ncache-control: no-cache, must-revalidate\r\nset-cookie: wap_sid=COj0gS8SQEdrbU41VGFoN0I0d0tJdmFRV1pTOVFsVHVUNFlzS3pTNmFBSHowbF9Jd2VfZjZ2U1daV0IyTGVJN3VEMnFSTEMYBCCkFCiVwca6CzCJ16TGBQ==; Path=/; HttpOnly\r\nset-cookie: wap_sid2=COj0gS8SiAFpbTdLQ0ZwZjl5M2RhNnVWY2JZZEo5R2FrVTF3alktU1Ywc0xiaExHcDRqM1U5bU5ESXJOLTk1S055bkxDZ3d1cEwtalFGVjJvX0lJd1d1MDl0b0JfeWtweVo5N1pMRmxQalhmaWdWTmNYQ2dMcVhjSWFkWm9VWGNyR3BZVGljYmdBTUFBQX5+; Path=/; HttpOnly\r\nconnection: keep-alive\r\nDate: Wed, 15 Mar 2017 11:54:49 GMT\r\nTransfer-Encoding: chunked\r\n\r\n',
        _headers: null,
        _headerNames: {},
        _onPendingData: [Function: updateOutgoingData],
        statusMessage: 'OK',
        statusCode: 200 } },
  connection:
   TLSSocket {
     _tlsOptions:
      { secureContext: [Object],
        isServer: true,
        server: [Object],
        requestCert: false,
        rejectUnauthorized: false,
        handshakeTimeout: 120000,
        NPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        SNICallback: [Function: SNIPrepareCert] },
     _secureEstablished: true,
     _securePending: false,
     _newSessionPending: false,
     _controlReleased: true,
     _SNICallback: [Function: SNIPrepareCert],
     servername: 'mp.weixin.qq.com',
     npnProtocol: false,
     alpnProtocol: 'http/1.1',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _events:
      { close: [Object],
        end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        secure: [Function],
        _tlsError: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 12,
     _connecting: false,
     _hadError: false,
     _handle:
      TLSWrap {
        _externalStream: {},
        fd: 26,
        _parent: [Object],
        _parentWrap: [Object],
        _secureContext: [Object],
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        writeQueueSize: 1,
        onhandshakestart: [Function: bound onhandshakestart],
        onhandshakedone: [Function: bound onhandshakedone],
        onclienthello: [Function: bound onclienthello],
        oncertcb: [Function: bound oncertcb],
        onnewsession: [Function: bound onnewsession],
        lastHandshakeTime: 10668,
        handshakes: 0,
        onerror: [Function],
        sni_context: SecureContext {} },
     _parent:
      Socket {
        _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null },
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 0,
     _bytesDispatched: 622,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     ssl:
      TLSWrap {
        _externalStream: {},
        fd: 26,
        _parent: [Object],
        _parentWrap: [Object],
        _secureContext: [Object],
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        writeQueueSize: 1,
        onhandshakestart: [Function: bound onhandshakestart],
        onhandshakedone: [Function: bound onhandshakedone],
        onclienthello: [Function: bound onclienthello],
        oncertcb: [Function: bound oncertcb],
        onnewsession: [Function: bound onnewsession],
        lastHandshakeTime: 10668,
        handshakes: 0,
        onerror: [Function],
        sni_context: SecureContext {} },
     server:
      Server {
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: false,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0d 0a 4d 49 49 43 58 51 49 42 41 41 4b 42 67 51 44 43 44 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0d 0a 4d 49 49 43 55 7a 43 43 41 62 79 67 41 77 49 42 41 67 49 51 6a ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        sessionIdContext: 'd2faffed9d74b8e7db7005e44b7a49bb',
        _sharedCreds: [Object],
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '6::::40000' },
     _requestCert: false,
     _rejectUnauthorized: false,
     _idleTimeout: 120000,
     _idleNext:
      { [Function: utcDate]
        _onTimeout: [Function],
        _idleTimeout: 762,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 10875 },
     _idlePrev:
      Socket {
        _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        bytesRead: 3488,
        _bytesDispatched: 1649,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Circular],
        _idlePrev: [Object],
        _idleStart: 11229,
        parser: null,
        on: [Function],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idleStart: 10876,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage:
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: true,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: 'HTTP/1.1 200 OK\r\ncontent-type: text/html; charset=UTF-8\r\ncache-control: no-cache, must-revalidate\r\nset-cookie: wap_sid=COj0gS8SQEdrbU41VGFoN0I0d0tJdmFRV1pTOVFsVHVUNFlzS3pTNmFBSHowbF9Jd2VfZjZ2U1daV0IyTGVJN3VEMnFSTEMYBCCkFCiVwca6CzCJ16TGBQ==; Path=/; HttpOnly\r\nset-cookie: wap_sid2=COj0gS8SiAFpbTdLQ0ZwZjl5M2RhNnVWY2JZZEo5R2FrVTF3alktU1Ywc0xiaExHcDRqM1U5bU5ESXJOLTk1S055bkxDZ3d1cEwtalFGVjJvX0lJd1d1MDl0b0JfeWtweVo5N1pMRmxQalhmaWdWTmNYQ2dMcVhjSWFkWm9VWGNyR3BZVGljYmdBTUFBQX5+; Path=/; HttpOnly\r\nconnection: keep-alive\r\nDate: Wed, 15 Mar 2017 11:54:49 GMT\r\nTransfer-Encoding: chunked\r\n\r\n',
        _headers: null,
        _headerNames: {},
        _onPendingData: [Function: updateOutgoingData],
        statusMessage: 'OK',
        statusCode: 200 } },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers:
   { host: 'mp.weixin.qq.com',
     cookie: 'wap_sid=COj0gS8SQGhCNGxnemxoY1lmNk9tUFo2dFFhSFMyMGFicm4zazlmdVpCYXVyX0ItQUtlTUlFdmFWTE1sWjVjRTJDdEI1UHAYBCD9ESiVwca6CzCI16TGBQ==; wap_sid2=COj0gS8SiAFpbTdLQ0ZwZjl5M2RhNnVWY2JZZEo5R2FrVTF3alktU1Ywc0xiaExHcDRqN20tS1VHbmh1RjdUdXNUczNBdHJib1dERnZWaEJ2ZEpMZnJ5QTB4V2xsQnViRERiWUVCWHZFZnF5RVZEZHlYQ3lkMHhRdVhyYV9WSENSaURrSEZfc2dBTUFBQX5+; rewardsn=629c24fc10abc6700b87; wxticket=3885162128; wxticketkey=c9c3ee7be321351b34f2ab1a05a42cf17160fea711912780637482f900862c1a; wxtokenkey=d94acf3da00c7d0d7cd1a1f4cead34c37160fea711912780637482f900862c1a; pgv_pvid=4850831696',
     'x-wechat-key': '7ac1e0b0ef7a0940e30244bd5e288e85654080b9e5cbbe079d143e8f0646d7e051b70c45561c932e38e4dee0c816e2de3be2b931f8fa04208f8c101484328c359f3b292625b7e3c04d6540540917169f',
     'x-wechat-uin': 'OTg1OTc0ODA%3D',
     accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'user-agent': 'Mozilla/5.0 (iPhone; CPU iPhone OS 10_1_1 like Mac OS X) AppleWebKit/602.2.14 (KHTML, like Gecko) Mobile/14B100 MicroMessenger/6.5.3 NetType/WIFI Language/zh_CN',
     'accept-language': 'zh-cn',
     connection: 'keep-alive',
     'content-length': 0 },
  rawHeaders:
   [ 'Host',
     'mp.weixin.qq.com',
     'Cookie',
     'wap_sid=COj0gS8SQGhCNGxnemxoY1lmNk9tUFo2dFFhSFMyMGFicm4zazlmdVpCYXVyX0ItQUtlTUlFdmFWTE1sWjVjRTJDdEI1UHAYBCD9ESiVwca6CzCI16TGBQ==; wap_sid2=COj0gS8SiAFpbTdLQ0ZwZjl5M2RhNnVWY2JZZEo5R2FrVTF3alktU1Ywc0xiaExHcDRqN20tS1VHbmh1RjdUdXNUczNBdHJib1dERnZWaEJ2ZEpMZnJ5QTB4V2xsQnViRERiWUVCWHZFZnF5RVZEZHlYQ3lkMHhRdVhyYV9WSENSaURrSEZfc2dBTUFBQX5+; rewardsn=629c24fc10abc6700b87; wxticket=3885162128; wxticketkey=c9c3ee7be321351b34f2ab1a05a42cf17160fea711912780637482f900862c1a; wxtokenkey=d94acf3da00c7d0d7cd1a1f4cead34c37160fea711912780637482f900862c1a; pgv_pvid=4850831696',
     'X-WECHAT-KEY',
     '7ac1e0b0ef7a0940e30244bd5e288e85654080b9e5cbbe079d143e8f0646d7e051b70c45561c932e38e4dee0c816e2de3be2b931f8fa04208f8c101484328c359f3b292625b7e3c04d6540540917169f',
     'X-WECHAT-UIN',
     'OTg1OTc0ODA%3D',
     'Accept',
     'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',
     'User-Agent',
     'Mozilla/5.0 (iPhone; CPU iPhone OS 10_1_1 like Mac OS X) AppleWebKit/602.2.14 (KHTML, like Gecko) Mobile/14B100 MicroMessenger/6.5.3 NetType/WIFI Language/zh_CN',
     'Accept-Language',
     'zh-cn',
     'Accept-Encoding',
     'gzip, deflate',
     'Connection',
     'keep-alive' ],
  trailers: {},
  rawTrailers: [],
  upgrade: false,
  url: '/mp/profile_ext?action=home&__biz=MzA3NTU4MDA1Mw==&scene=124&uin=OTg1OTc0ODA%3D&key=7ac1e0b0ef7a0940e30244bd5e288e85654080b9e5cbbe079d143e8f0646d7e051b70c45561c932e38e4dee0c816e2de3be2b931f8fa04208f8c101484328c359f3b292625b7e3c04d6540540917169f&devicetype=iOS10.1.1&version=16050321&lang=zh_CN&nettype=WIFI&a8scene=3&fontScale=106&pass_ticket=wFxXfJzLcBuzMHF1BUfv7QGDKlShy9DxkPbzXuNHAiY%3D&wx_header=1',
  method: 'GET',
  statusCode: null,
  statusMessage: null,
  client:
   TLSSocket {
     _tlsOptions:
      { secureContext: [Object],
        isServer: true,
        server: [Object],
        requestCert: false,
        rejectUnauthorized: false,
        handshakeTimeout: 120000,
        NPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        SNICallback: [Function: SNIPrepareCert] },
     _secureEstablished: true,
     _securePending: false,
     _newSessionPending: false,
     _controlReleased: true,
     _SNICallback: [Function: SNIPrepareCert],
     servername: 'mp.weixin.qq.com',
     npnProtocol: false,
     alpnProtocol: 'http/1.1',
     authorized: false,
     authorizationError: null,
     encrypted: true,
     _events:
      { close: [Object],
        end: [Object],
        finish: [Function: onSocketFinish],
        _socketEnd: [Function: onSocketEnd],
        secure: [Function],
        _tlsError: [Function],
        drain: [Object],
        timeout: [Function],
        error: [Function: socketOnError],
        data: [Function: socketOnData],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 12,
     _connecting: false,
     _hadError: false,
     _handle:
      TLSWrap {
        _externalStream: {},
        fd: 26,
        _parent: [Object],
        _parentWrap: [Object],
        _secureContext: [Object],
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        writeQueueSize: 1,
        onhandshakestart: [Function: bound onhandshakestart],
        onhandshakedone: [Function: bound onhandshakedone],
        onclienthello: [Function: bound onclienthello],
        oncertcb: [Function: bound oncertcb],
        onnewsession: [Function: bound onnewsession],
        lastHandshakeTime: 10668,
        handshakes: 0,
        onerror: [Function],
        sni_context: SecureContext {} },
     _parent:
      Socket {
        _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 5,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: false,
        destroyed: false,
        bytesRead: 0,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null },
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        defaultEncoding: 'utf8',
        ranOut: false,
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null,
        resumeScheduled: false },
     readable: true,
     domain: null,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false },
     writable: true,
     allowHalfOpen: false,
     destroyed: false,
     bytesRead: 0,
     _bytesDispatched: 622,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     ssl:
      TLSWrap {
        _externalStream: {},
        fd: 26,
        _parent: [Object],
        _parentWrap: [Object],
        _secureContext: [Object],
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        writeQueueSize: 1,
        onhandshakestart: [Function: bound onhandshakestart],
        onhandshakedone: [Function: bound onhandshakedone],
        onclienthello: [Function: bound onclienthello],
        oncertcb: [Function: bound oncertcb],
        onnewsession: [Function: bound onnewsession],
        lastHandshakeTime: 10668,
        handshakes: 0,
        onerror: [Function],
        sni_context: SecureContext {} },
     server:
      Server {
        _contexts: [],
        requestCert: false,
        rejectUnauthorized: false,
        key: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 52 53 41 20 50 52 49 56 41 54 45 20 4b 45 59 2d 2d 2d 2d 2d 0d 0a 4d 49 49 43 58 51 49 42 41 41 4b 42 67 51 44 43 44 ... >,
        cert: <Buffer 2d 2d 2d 2d 2d 42 45 47 49 4e 20 43 45 52 54 49 46 49 43 41 54 45 2d 2d 2d 2d 2d 0d 0a 4d 49 49 43 55 7a 43 43 41 62 79 67 41 77 49 42 41 67 49 51 6a ... >,
        honorCipherOrder: true,
        NPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31 08 68 74 74 70 2f 31 2e 30>,
        ALPNProtocols: <Buffer 08 68 74 74 70 2f 31 2e 31>,
        sessionIdContext: 'd2faffed9d74b8e7db7005e44b7a49bb',
        _sharedCreds: [Object],
        domain: null,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: false,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        _connectionKey: '6::::40000' },
     _requestCert: false,
     _rejectUnauthorized: false,
     _idleTimeout: 120000,
     _idleNext:
      { [Function: utcDate]
        _onTimeout: [Function],
        _idleTimeout: 762,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 10875 },
     _idlePrev:
      Socket {
        _connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        destroyed: false,
        bytesRead: 3488,
        _bytesDispatched: 1649,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Circular],
        _idlePrev: [Object],
        _idleStart: 11229,
        parser: null,
        on: [Function],
        _paused: false,
        read: [Function],
        _consuming: true },
     _idleStart: 10876,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        maxHeaderPairs: 2000,
        onIncoming: [Function: parserOnIncoming] },
     on: [Function: socketOnWrap],
     _paused: false,
     read: [Function],
     _consuming: true,
     _httpMessage:
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        chunkedEncoding: true,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedHeader: {},
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: 'HTTP/1.1 200 OK\r\ncontent-type: text/html; charset=UTF-8\r\ncache-control: no-cache, must-revalidate\r\nset-cookie: wap_sid=COj0gS8SQEdrbU41VGFoN0I0d0tJdmFRV1pTOVFsVHVUNFlzS3pTNmFBSHowbF9Jd2VfZjZ2U1daV0IyTGVJN3VEMnFSTEMYBCCkFCiVwca6CzCJ16TGBQ==; Path=/; HttpOnly\r\nset-cookie: wap_sid2=COj0gS8SiAFpbTdLQ0ZwZjl5M2RhNnVWY2JZZEo5R2FrVTF3alktU1Ywc0xiaExHcDRqM1U5bU5ESXJOLTk1S055bkxDZ3d1cEwtalFGVjJvX0lJd1d1MDl0b0JfeWtweVo5N1pMRmxQalhmaWdWTmNYQ2dMcVhjSWFkWm9VWGNyR3BZVGljYmdBTUFBQX5+; Path=/; HttpOnly\r\nconnection: keep-alive\r\nDate: Wed, 15 Mar 2017 11:54:49 GMT\r\nTransfer-Encoding: chunked\r\n\r\n',
        _headers: null,
        _headerNames: {},
        _onPendingData: [Function: updateOutgoingData],
        statusMessage: 'OK',
        statusCode: 200 } },
  _consuming: true,
  _dumped: false,
  read: [Function] }